// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const inversify_1 = require("inversify");

const TypeMoq = require("typemoq");

let MockProcess = class MockProcess {
  constructor(env = Object.assign({}, process.env)) {
    this.env = env;
  }

  on(event, listener) {
    return this;
  }

  get argv() {
    return [];
  }

  get stdout() {
    return TypeMoq.Mock.ofType().object;
  }

  get stdin() {
    return TypeMoq.Mock.ofType().object;
  }

  get execPath() {
    return '';
  }

};
MockProcess = __decorate([inversify_1.injectable()], MockProcess);
exports.MockProcess = MockProcess;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2Nlc3MuanMiXSwibmFtZXMiOlsiX19kZWNvcmF0ZSIsImRlY29yYXRvcnMiLCJ0YXJnZXQiLCJrZXkiLCJkZXNjIiwiYyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInIiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJkIiwiUmVmbGVjdCIsImRlY29yYXRlIiwiaSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaW52ZXJzaWZ5XzEiLCJyZXF1aXJlIiwiVHlwZU1vcSIsIk1vY2tQcm9jZXNzIiwiY29uc3RydWN0b3IiLCJlbnYiLCJhc3NpZ24iLCJwcm9jZXNzIiwib24iLCJldmVudCIsImxpc3RlbmVyIiwiYXJndiIsInN0ZG91dCIsIk1vY2siLCJvZlR5cGUiLCJvYmplY3QiLCJzdGRpbiIsImV4ZWNQYXRoIiwiaW5qZWN0YWJsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBLElBQUlBLFVBQVUsR0FBSSxVQUFRLFNBQUtBLFVBQWQsSUFBNkIsVUFBVUMsVUFBVixFQUFzQkMsTUFBdEIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUNuRixNQUFJQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBbEI7QUFBQSxNQUEwQkMsQ0FBQyxHQUFHSCxDQUFDLEdBQUcsQ0FBSixHQUFRSCxNQUFSLEdBQWlCRSxJQUFJLEtBQUssSUFBVCxHQUFnQkEsSUFBSSxHQUFHSyxNQUFNLENBQUNDLHdCQUFQLENBQWdDUixNQUFoQyxFQUF3Q0MsR0FBeEMsQ0FBdkIsR0FBc0VDLElBQXJIO0FBQUEsTUFBMkhPLENBQTNIO0FBQ0EsTUFBSSxPQUFPQyxPQUFQLEtBQW1CLFFBQW5CLElBQStCLE9BQU9BLE9BQU8sQ0FBQ0MsUUFBZixLQUE0QixVQUEvRCxFQUEyRUwsQ0FBQyxHQUFHSSxPQUFPLENBQUNDLFFBQVIsQ0FBaUJaLFVBQWpCLEVBQTZCQyxNQUE3QixFQUFxQ0MsR0FBckMsRUFBMENDLElBQTFDLENBQUosQ0FBM0UsS0FDSyxLQUFLLElBQUlVLENBQUMsR0FBR2IsVUFBVSxDQUFDTSxNQUFYLEdBQW9CLENBQWpDLEVBQW9DTyxDQUFDLElBQUksQ0FBekMsRUFBNENBLENBQUMsRUFBN0MsRUFBaUQsSUFBSUgsQ0FBQyxHQUFHVixVQUFVLENBQUNhLENBQUQsQ0FBbEIsRUFBdUJOLENBQUMsR0FBRyxDQUFDSCxDQUFDLEdBQUcsQ0FBSixHQUFRTSxDQUFDLENBQUNILENBQUQsQ0FBVCxHQUFlSCxDQUFDLEdBQUcsQ0FBSixHQUFRTSxDQUFDLENBQUNULE1BQUQsRUFBU0MsR0FBVCxFQUFjSyxDQUFkLENBQVQsR0FBNEJHLENBQUMsQ0FBQ1QsTUFBRCxFQUFTQyxHQUFULENBQTdDLEtBQStESyxDQUFuRTtBQUM3RSxTQUFPSCxDQUFDLEdBQUcsQ0FBSixJQUFTRyxDQUFULElBQWNDLE1BQU0sQ0FBQ00sY0FBUCxDQUFzQmIsTUFBdEIsRUFBOEJDLEdBQTlCLEVBQW1DSyxDQUFuQyxDQUFkLEVBQXFEQSxDQUE1RDtBQUNILENBTEQ7O0FBTUFDLE1BQU0sQ0FBQ00sY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUEzQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQUlFLFdBQVcsR0FBRyxNQUFNQSxXQUFOLENBQWtCO0FBQ2hDQyxFQUFBQSxXQUFXLENBQUNDLEdBQUcsR0FBR2QsTUFBTSxDQUFDZSxNQUFQLENBQWMsRUFBZCxFQUFrQkMsT0FBTyxDQUFDRixHQUExQixDQUFQLEVBQXVDO0FBQzlDLFNBQUtBLEdBQUwsR0FBV0EsR0FBWDtBQUNIOztBQUNERyxFQUFBQSxFQUFFLENBQUNDLEtBQUQsRUFBUUMsUUFBUixFQUFrQjtBQUNoQixXQUFPLElBQVA7QUFDSDs7QUFDRCxNQUFJQyxJQUFKLEdBQVc7QUFDUCxXQUFPLEVBQVA7QUFDSDs7QUFDRCxNQUFJQyxNQUFKLEdBQWE7QUFDVCxXQUFPVixPQUFPLENBQUNXLElBQVIsQ0FBYUMsTUFBYixHQUFzQkMsTUFBN0I7QUFDSDs7QUFDRCxNQUFJQyxLQUFKLEdBQVk7QUFDUixXQUFPZCxPQUFPLENBQUNXLElBQVIsQ0FBYUMsTUFBYixHQUFzQkMsTUFBN0I7QUFDSDs7QUFDRCxNQUFJRSxRQUFKLEdBQWU7QUFDWCxXQUFPLEVBQVA7QUFDSDs7QUFsQitCLENBQXBDO0FBb0JBZCxXQUFXLEdBQUdyQixVQUFVLENBQUMsQ0FDckJrQixXQUFXLENBQUNrQixVQUFaLEVBRHFCLENBQUQsRUFFckJmLFdBRnFCLENBQXhCO0FBR0FMLE9BQU8sQ0FBQ0ssV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4ndXNlIHN0cmljdCc7XHJcbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcclxuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XHJcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xyXG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcclxuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgaW52ZXJzaWZ5XzEgPSByZXF1aXJlKFwiaW52ZXJzaWZ5XCIpO1xyXG5jb25zdCBUeXBlTW9xID0gcmVxdWlyZShcInR5cGVtb3FcIik7XHJcbmxldCBNb2NrUHJvY2VzcyA9IGNsYXNzIE1vY2tQcm9jZXNzIHtcclxuICAgIGNvbnN0cnVjdG9yKGVudiA9IE9iamVjdC5hc3NpZ24oe30sIHByb2Nlc3MuZW52KSkge1xyXG4gICAgICAgIHRoaXMuZW52ID0gZW52O1xyXG4gICAgfVxyXG4gICAgb24oZXZlbnQsIGxpc3RlbmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBnZXQgYXJndigpIHtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgICBnZXQgc3Rkb3V0KCkge1xyXG4gICAgICAgIHJldHVybiBUeXBlTW9xLk1vY2sub2ZUeXBlKCkub2JqZWN0O1xyXG4gICAgfVxyXG4gICAgZ2V0IHN0ZGluKCkge1xyXG4gICAgICAgIHJldHVybiBUeXBlTW9xLk1vY2sub2ZUeXBlKCkub2JqZWN0O1xyXG4gICAgfVxyXG4gICAgZ2V0IGV4ZWNQYXRoKCkge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxufTtcclxuTW9ja1Byb2Nlc3MgPSBfX2RlY29yYXRlKFtcclxuICAgIGludmVyc2lmeV8xLmluamVjdGFibGUoKVxyXG5dLCBNb2NrUHJvY2Vzcyk7XHJcbmV4cG9ydHMuTW9ja1Byb2Nlc3MgPSBNb2NrUHJvY2VzcztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXX0=