"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const assert = require("assert"); // You can import and use all API from the 'vscode' module
// as well as import your extension to test it


const helpers_1 = require("../../client/common/helpers"); // Defines a Mocha test suite to group tests of similar kind together


suite('helpers', () => {
  test('isNotInstalledError', done => {
    const error = new Error('something is not installed');
    assert.equal(helpers_1.isNotInstalledError(error), false, 'Standard error'); // tslint:disable-next-line:no-any

    error.code = 'ENOENT';
    assert.equal(helpers_1.isNotInstalledError(error), true, 'ENOENT error code not detected'); // tslint:disable-next-line:no-any

    error.code = 127;
    assert.equal(helpers_1.isNotInstalledError(error), true, '127 error code not detected');
    done();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMudGVzdC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFzc2VydCIsInJlcXVpcmUiLCJoZWxwZXJzXzEiLCJzdWl0ZSIsInRlc3QiLCJkb25lIiwiZXJyb3IiLCJFcnJvciIsImVxdWFsIiwiaXNOb3RJbnN0YWxsZWRFcnJvciIsImNvZGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLE1BQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEIsQyxDQUNBO0FBQ0E7OztBQUNBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLDZCQUFELENBQXpCLEMsQ0FDQTs7O0FBQ0FFLEtBQUssQ0FBQyxTQUFELEVBQVksTUFBTTtBQUNuQkMsRUFBQUEsSUFBSSxDQUFDLHFCQUFELEVBQXdCQyxJQUFJLElBQUk7QUFDaEMsVUFBTUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSw0QkFBVixDQUFkO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhTixTQUFTLENBQUNPLG1CQUFWLENBQThCSCxLQUE5QixDQUFiLEVBQW1ELEtBQW5ELEVBQTBELGdCQUExRCxFQUZnQyxDQUdoQzs7QUFDQUEsSUFBQUEsS0FBSyxDQUFDSSxJQUFOLEdBQWEsUUFBYjtBQUNBVixJQUFBQSxNQUFNLENBQUNRLEtBQVAsQ0FBYU4sU0FBUyxDQUFDTyxtQkFBVixDQUE4QkgsS0FBOUIsQ0FBYixFQUFtRCxJQUFuRCxFQUF5RCxnQ0FBekQsRUFMZ0MsQ0FNaEM7O0FBQ0FBLElBQUFBLEtBQUssQ0FBQ0ksSUFBTixHQUFhLEdBQWI7QUFDQVYsSUFBQUEsTUFBTSxDQUFDUSxLQUFQLENBQWFOLFNBQVMsQ0FBQ08sbUJBQVYsQ0FBOEJILEtBQTlCLENBQWIsRUFBbUQsSUFBbkQsRUFBeUQsNkJBQXpEO0FBQ0FELElBQUFBLElBQUk7QUFDUCxHQVZHLENBQUo7QUFXSCxDQVpJLENBQUwiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKFwiYXNzZXJ0XCIpO1xyXG4vLyBZb3UgY2FuIGltcG9ydCBhbmQgdXNlIGFsbCBBUEkgZnJvbSB0aGUgJ3ZzY29kZScgbW9kdWxlXHJcbi8vIGFzIHdlbGwgYXMgaW1wb3J0IHlvdXIgZXh0ZW5zaW9uIHRvIHRlc3QgaXRcclxuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4uLy4uL2NsaWVudC9jb21tb24vaGVscGVyc1wiKTtcclxuLy8gRGVmaW5lcyBhIE1vY2hhIHRlc3Qgc3VpdGUgdG8gZ3JvdXAgdGVzdHMgb2Ygc2ltaWxhciBraW5kIHRvZ2V0aGVyXHJcbnN1aXRlKCdoZWxwZXJzJywgKCkgPT4ge1xyXG4gICAgdGVzdCgnaXNOb3RJbnN0YWxsZWRFcnJvcicsIGRvbmUgPT4ge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKCdzb21ldGhpbmcgaXMgbm90IGluc3RhbGxlZCcpO1xyXG4gICAgICAgIGFzc2VydC5lcXVhbChoZWxwZXJzXzEuaXNOb3RJbnN0YWxsZWRFcnJvcihlcnJvciksIGZhbHNlLCAnU3RhbmRhcmQgZXJyb3InKTtcclxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XHJcbiAgICAgICAgZXJyb3IuY29kZSA9ICdFTk9FTlQnO1xyXG4gICAgICAgIGFzc2VydC5lcXVhbChoZWxwZXJzXzEuaXNOb3RJbnN0YWxsZWRFcnJvcihlcnJvciksIHRydWUsICdFTk9FTlQgZXJyb3IgY29kZSBub3QgZGV0ZWN0ZWQnKTtcclxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XHJcbiAgICAgICAgZXJyb3IuY29kZSA9IDEyNztcclxuICAgICAgICBhc3NlcnQuZXF1YWwoaGVscGVyc18xLmlzTm90SW5zdGFsbGVkRXJyb3IoZXJyb3IpLCB0cnVlLCAnMTI3IGVycm9yIGNvZGUgbm90IGRldGVjdGVkJyk7XHJcbiAgICAgICAgZG9uZSgpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLnRlc3QuanMubWFwIl19