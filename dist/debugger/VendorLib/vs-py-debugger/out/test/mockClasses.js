"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

class MockOutputChannel {
  constructor(name) {
    this.name = name;
    this.output = '';
  }

  append(value) {
    this.output += value;
  }

  appendLine(value) {
    this.append(value);
    this.append('\n');
  } // tslint:disable-next-line:no-empty


  clear() {} // tslint:disable-next-line:no-any


  show(x, y) {
    this.isShown = true;
  }

  hide() {
    this.isShown = false;
  } // tslint:disable-next-line:no-empty


  dispose() {}

}

exports.MockOutputChannel = MockOutputChannel;

class MockStatusBarItem {
  // tslint:disable-next-line:no-empty
  show() {} // tslint:disable-next-line:no-empty


  hide() {} // tslint:disable-next-line:no-empty


  dispose() {}

}

exports.MockStatusBarItem = MockStatusBarItem;

class MockLintingSettings {}

exports.MockLintingSettings = MockLintingSettings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tDbGFzc2VzLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTW9ja091dHB1dENoYW5uZWwiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJvdXRwdXQiLCJhcHBlbmQiLCJhcHBlbmRMaW5lIiwiY2xlYXIiLCJzaG93IiwieCIsInkiLCJpc1Nob3duIiwiaGlkZSIsImRpc3Bvc2UiLCJNb2NrU3RhdHVzQmFySXRlbSIsIk1vY2tMaW50aW5nU2V0dGluZ3MiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLE1BQU1DLGlCQUFOLENBQXdCO0FBQ3BCQyxFQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBTztBQUNkLFNBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0g7O0FBQ0RDLEVBQUFBLE1BQU0sQ0FBQ0wsS0FBRCxFQUFRO0FBQ1YsU0FBS0ksTUFBTCxJQUFlSixLQUFmO0FBQ0g7O0FBQ0RNLEVBQUFBLFVBQVUsQ0FBQ04sS0FBRCxFQUFRO0FBQUUsU0FBS0ssTUFBTCxDQUFZTCxLQUFaO0FBQW9CLFNBQUtLLE1BQUwsQ0FBWSxJQUFaO0FBQW9CLEdBUnhDLENBU3BCOzs7QUFDQUUsRUFBQUEsS0FBSyxHQUFHLENBQUcsQ0FWUyxDQVdwQjs7O0FBQ0FDLEVBQUFBLElBQUksQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKLEVBQU87QUFDUCxTQUFLQyxPQUFMLEdBQWUsSUFBZjtBQUNIOztBQUNEQyxFQUFBQSxJQUFJLEdBQUc7QUFDSCxTQUFLRCxPQUFMLEdBQWUsS0FBZjtBQUNILEdBakJtQixDQWtCcEI7OztBQUNBRSxFQUFBQSxPQUFPLEdBQUcsQ0FBRzs7QUFuQk87O0FBcUJ4QmQsT0FBTyxDQUFDRSxpQkFBUixHQUE0QkEsaUJBQTVCOztBQUNBLE1BQU1hLGlCQUFOLENBQXdCO0FBQ3BCO0FBQ0FOLEVBQUFBLElBQUksR0FBRyxDQUNOLENBSG1CLENBSXBCOzs7QUFDQUksRUFBQUEsSUFBSSxHQUFHLENBQ04sQ0FObUIsQ0FPcEI7OztBQUNBQyxFQUFBQSxPQUFPLEdBQUcsQ0FDVDs7QUFUbUI7O0FBV3hCZCxPQUFPLENBQUNlLGlCQUFSLEdBQTRCQSxpQkFBNUI7O0FBQ0EsTUFBTUMsbUJBQU4sQ0FBMEI7O0FBRTFCaEIsT0FBTyxDQUFDZ0IsbUJBQVIsR0FBOEJBLG1CQUE5QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmNsYXNzIE1vY2tPdXRwdXRDaGFubmVsIHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gJyc7XHJcbiAgICB9XHJcbiAgICBhcHBlbmQodmFsdWUpIHtcclxuICAgICAgICB0aGlzLm91dHB1dCArPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIGFwcGVuZExpbmUodmFsdWUpIHsgdGhpcy5hcHBlbmQodmFsdWUpOyB0aGlzLmFwcGVuZCgnXFxuJyk7IH1cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1lbXB0eVxyXG4gICAgY2xlYXIoKSB7IH1cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcclxuICAgIHNob3coeCwgeSkge1xyXG4gICAgICAgIHRoaXMuaXNTaG93biA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBoaWRlKCkge1xyXG4gICAgICAgIHRoaXMuaXNTaG93biA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWVtcHR5XHJcbiAgICBkaXNwb3NlKCkgeyB9XHJcbn1cclxuZXhwb3J0cy5Nb2NrT3V0cHV0Q2hhbm5lbCA9IE1vY2tPdXRwdXRDaGFubmVsO1xyXG5jbGFzcyBNb2NrU3RhdHVzQmFySXRlbSB7XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tZW1wdHlcclxuICAgIHNob3coKSB7XHJcbiAgICB9XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tZW1wdHlcclxuICAgIGhpZGUoKSB7XHJcbiAgICB9XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tZW1wdHlcclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5Nb2NrU3RhdHVzQmFySXRlbSA9IE1vY2tTdGF0dXNCYXJJdGVtO1xyXG5jbGFzcyBNb2NrTGludGluZ1NldHRpbmdzIHtcclxufVxyXG5leHBvcnRzLk1vY2tMaW50aW5nU2V0dGluZ3MgPSBNb2NrTGludGluZ1NldHRpbmdzO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2NrQ2xhc3Nlcy5qcy5tYXAiXX0=