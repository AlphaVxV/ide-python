// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

const TypeMoq = require("typemoq");

const types_1 = require("../../client/common/application/types");

const types_2 = require("../../client/common/types");

const datascience_1 = require("../../client/datascience/datascience");

suite('Data Science Tests', () => {
  let serviceContainer;
  let shell;
  let commandManager;
  let disposableRegistry;
  let dataScience;
  setup(() => {
    serviceContainer = TypeMoq.Mock.ofType();
    commandManager = TypeMoq.Mock.ofType();
    disposableRegistry = TypeMoq.Mock.ofType();
    shell = TypeMoq.Mock.ofType();
    serviceContainer.setup(c => c.get(types_1.ICommandManager)).returns(() => commandManager.object);
    serviceContainer.setup(c => c.get(types_1.IApplicationShell)).returns(() => shell.object);
    serviceContainer.setup(c => c.get(types_2.IDisposableRegistry)).returns(() => disposableRegistry.object);
    dataScience = new datascience_1.DataScience(serviceContainer.object);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFzY2llbmNlLnVuaXQudGVzdC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlR5cGVNb3EiLCJyZXF1aXJlIiwidHlwZXNfMSIsInR5cGVzXzIiLCJkYXRhc2NpZW5jZV8xIiwic3VpdGUiLCJzZXJ2aWNlQ29udGFpbmVyIiwic2hlbGwiLCJjb21tYW5kTWFuYWdlciIsImRpc3Bvc2FibGVSZWdpc3RyeSIsImRhdGFTY2llbmNlIiwic2V0dXAiLCJNb2NrIiwib2ZUeXBlIiwiYyIsImdldCIsIklDb21tYW5kTWFuYWdlciIsInJldHVybnMiLCJvYmplY3QiLCJJQXBwbGljYXRpb25TaGVsbCIsIklEaXNwb3NhYmxlUmVnaXN0cnkiLCJEYXRhU2NpZW5jZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLE1BQU1DLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsdUNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsMkJBQUQsQ0FBdkI7O0FBQ0EsTUFBTUcsYUFBYSxHQUFHSCxPQUFPLENBQUMsc0NBQUQsQ0FBN0I7O0FBQ0FJLEtBQUssQ0FBQyxvQkFBRCxFQUF1QixNQUFNO0FBQzlCLE1BQUlDLGdCQUFKO0FBQ0EsTUFBSUMsS0FBSjtBQUNBLE1BQUlDLGNBQUo7QUFDQSxNQUFJQyxrQkFBSjtBQUNBLE1BQUlDLFdBQUo7QUFDQUMsRUFBQUEsS0FBSyxDQUFDLE1BQU07QUFDUkwsSUFBQUEsZ0JBQWdCLEdBQUdOLE9BQU8sQ0FBQ1ksSUFBUixDQUFhQyxNQUFiLEVBQW5CO0FBQ0FMLElBQUFBLGNBQWMsR0FBR1IsT0FBTyxDQUFDWSxJQUFSLENBQWFDLE1BQWIsRUFBakI7QUFDQUosSUFBQUEsa0JBQWtCLEdBQUdULE9BQU8sQ0FBQ1ksSUFBUixDQUFhQyxNQUFiLEVBQXJCO0FBQ0FOLElBQUFBLEtBQUssR0FBR1AsT0FBTyxDQUFDWSxJQUFSLENBQWFDLE1BQWIsRUFBUjtBQUNBUCxJQUFBQSxnQkFBZ0IsQ0FBQ0ssS0FBakIsQ0FBdUJHLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxHQUFGLENBQU1iLE9BQU8sQ0FBQ2MsZUFBZCxDQUE1QixFQUE0REMsT0FBNUQsQ0FBb0UsTUFBTVQsY0FBYyxDQUFDVSxNQUF6RjtBQUNBWixJQUFBQSxnQkFBZ0IsQ0FBQ0ssS0FBakIsQ0FBdUJHLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxHQUFGLENBQU1iLE9BQU8sQ0FBQ2lCLGlCQUFkLENBQTVCLEVBQThERixPQUE5RCxDQUFzRSxNQUFNVixLQUFLLENBQUNXLE1BQWxGO0FBQ0FaLElBQUFBLGdCQUFnQixDQUFDSyxLQUFqQixDQUF1QkcsQ0FBQyxJQUFJQSxDQUFDLENBQUNDLEdBQUYsQ0FBTVosT0FBTyxDQUFDaUIsbUJBQWQsQ0FBNUIsRUFBZ0VILE9BQWhFLENBQXdFLE1BQU1SLGtCQUFrQixDQUFDUyxNQUFqRztBQUNBUixJQUFBQSxXQUFXLEdBQUcsSUFBSU4sYUFBYSxDQUFDaUIsV0FBbEIsQ0FBOEJmLGdCQUFnQixDQUFDWSxNQUEvQyxDQUFkO0FBQ0gsR0FUSSxDQUFMO0FBVUgsQ0FoQkksQ0FBTCIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbid1c2Ugc3RyaWN0JztcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBUeXBlTW9xID0gcmVxdWlyZShcInR5cGVtb3FcIik7XHJcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vLi4vY2xpZW50L2NvbW1vbi9hcHBsaWNhdGlvbi90eXBlc1wiKTtcclxuY29uc3QgdHlwZXNfMiA9IHJlcXVpcmUoXCIuLi8uLi9jbGllbnQvY29tbW9uL3R5cGVzXCIpO1xyXG5jb25zdCBkYXRhc2NpZW5jZV8xID0gcmVxdWlyZShcIi4uLy4uL2NsaWVudC9kYXRhc2NpZW5jZS9kYXRhc2NpZW5jZVwiKTtcclxuc3VpdGUoJ0RhdGEgU2NpZW5jZSBUZXN0cycsICgpID0+IHtcclxuICAgIGxldCBzZXJ2aWNlQ29udGFpbmVyO1xyXG4gICAgbGV0IHNoZWxsO1xyXG4gICAgbGV0IGNvbW1hbmRNYW5hZ2VyO1xyXG4gICAgbGV0IGRpc3Bvc2FibGVSZWdpc3RyeTtcclxuICAgIGxldCBkYXRhU2NpZW5jZTtcclxuICAgIHNldHVwKCgpID0+IHtcclxuICAgICAgICBzZXJ2aWNlQ29udGFpbmVyID0gVHlwZU1vcS5Nb2NrLm9mVHlwZSgpO1xyXG4gICAgICAgIGNvbW1hbmRNYW5hZ2VyID0gVHlwZU1vcS5Nb2NrLm9mVHlwZSgpO1xyXG4gICAgICAgIGRpc3Bvc2FibGVSZWdpc3RyeSA9IFR5cGVNb3EuTW9jay5vZlR5cGUoKTtcclxuICAgICAgICBzaGVsbCA9IFR5cGVNb3EuTW9jay5vZlR5cGUoKTtcclxuICAgICAgICBzZXJ2aWNlQ29udGFpbmVyLnNldHVwKGMgPT4gYy5nZXQodHlwZXNfMS5JQ29tbWFuZE1hbmFnZXIpKS5yZXR1cm5zKCgpID0+IGNvbW1hbmRNYW5hZ2VyLm9iamVjdCk7XHJcbiAgICAgICAgc2VydmljZUNvbnRhaW5lci5zZXR1cChjID0+IGMuZ2V0KHR5cGVzXzEuSUFwcGxpY2F0aW9uU2hlbGwpKS5yZXR1cm5zKCgpID0+IHNoZWxsLm9iamVjdCk7XHJcbiAgICAgICAgc2VydmljZUNvbnRhaW5lci5zZXR1cChjID0+IGMuZ2V0KHR5cGVzXzIuSURpc3Bvc2FibGVSZWdpc3RyeSkpLnJldHVybnMoKCkgPT4gZGlzcG9zYWJsZVJlZ2lzdHJ5Lm9iamVjdCk7XHJcbiAgICAgICAgZGF0YVNjaWVuY2UgPSBuZXcgZGF0YXNjaWVuY2VfMS5EYXRhU2NpZW5jZShzZXJ2aWNlQ29udGFpbmVyLm9iamVjdCk7XHJcbiAgICB9KTtcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGFzY2llbmNlLnVuaXQudGVzdC5qcy5tYXAiXX0=