// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

const React = require("react");

const types_1 = require("../../client/datascience/types");

require("./executionCount.css");

class ExecutionCount extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    const isBusy = this.props.cell.state === types_1.CellState.init || this.props.cell.state === types_1.CellState.executing;

    if (this.props.visible) {
      return isBusy ? React.createElement("div", {
        className: 'execution-count-busy-outer'
      }, "[", React.createElement("svg", {
        className: 'execution-count-busy-svg',
        viewBox: '0 0 100 100'
      }, React.createElement("polyline", {
        points: '50,0, 50,50, 85,15, 50,50, 100,50, 50,50, 85,85, 50,50 50,100 50,50 15,85 50,50 0,50 50,50 15,15',
        className: 'execution-count-busy-polyline'
      })), "]") : React.createElement("div", {
        className: 'execution-count'
      }, `[${this.props.cell.data.execution_count}]`);
    } else {
      return null;
    }
  }

}

exports.ExecutionCount = ExecutionCount;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZWN1dGlvbkNvdW50LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUmVhY3QiLCJyZXF1aXJlIiwidHlwZXNfMSIsIkV4ZWN1dGlvbkNvdW50IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInJlbmRlciIsImlzQnVzeSIsImNlbGwiLCJzdGF0ZSIsIkNlbGxTdGF0ZSIsImluaXQiLCJleGVjdXRpbmciLCJ2aXNpYmxlIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInZpZXdCb3giLCJwb2ludHMiLCJkYXRhIiwiZXhlY3V0aW9uX2NvdW50Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0FBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxnQ0FBRCxDQUF2Qjs7QUFDQUEsT0FBTyxDQUFDLHNCQUFELENBQVA7O0FBQ0EsTUFBTUUsY0FBTixTQUE2QkgsS0FBSyxDQUFDSSxTQUFuQyxDQUE2QztBQUN6Q0MsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDZixVQUFNQSxLQUFOO0FBQ0g7O0FBQ0RDLEVBQUFBLE1BQU0sR0FBRztBQUNMLFVBQU1DLE1BQU0sR0FBRyxLQUFLRixLQUFMLENBQVdHLElBQVgsQ0FBZ0JDLEtBQWhCLEtBQTBCUixPQUFPLENBQUNTLFNBQVIsQ0FBa0JDLElBQTVDLElBQW9ELEtBQUtOLEtBQUwsQ0FBV0csSUFBWCxDQUFnQkMsS0FBaEIsS0FBMEJSLE9BQU8sQ0FBQ1MsU0FBUixDQUFrQkUsU0FBL0c7O0FBQ0EsUUFBSSxLQUFLUCxLQUFMLENBQVdRLE9BQWYsRUFBd0I7QUFDcEIsYUFBT04sTUFBTSxHQUNSUixLQUFLLENBQUNlLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkI7QUFBRUMsUUFBQUEsU0FBUyxFQUFFO0FBQWIsT0FBM0IsRUFDRyxHQURILEVBRUdoQixLQUFLLENBQUNlLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkI7QUFBRUMsUUFBQUEsU0FBUyxFQUFFLDBCQUFiO0FBQXlDQyxRQUFBQSxPQUFPLEVBQUU7QUFBbEQsT0FBM0IsRUFDSWpCLEtBQUssQ0FBQ2UsYUFBTixDQUFvQixVQUFwQixFQUFnQztBQUFFRyxRQUFBQSxNQUFNLEVBQUUsa0dBQVY7QUFBOEdGLFFBQUFBLFNBQVMsRUFBRTtBQUF6SCxPQUFoQyxDQURKLENBRkgsRUFJRyxHQUpILENBRFEsR0FNUmhCLEtBQUssQ0FBQ2UsYUFBTixDQUFvQixLQUFwQixFQUEyQjtBQUFFQyxRQUFBQSxTQUFTLEVBQUU7QUFBYixPQUEzQixFQUE4RCxJQUFHLEtBQUtWLEtBQUwsQ0FBV0csSUFBWCxDQUFnQlUsSUFBaEIsQ0FBcUJDLGVBQWdCLEdBQXRHLENBTkw7QUFPSCxLQVJELE1BU0s7QUFDRCxhQUFPLElBQVA7QUFDSDtBQUNKOztBQWxCd0M7O0FBb0I3Q3RCLE9BQU8sQ0FBQ0ssY0FBUixHQUF5QkEsY0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4ndXNlIHN0cmljdCc7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vLi4vY2xpZW50L2RhdGFzY2llbmNlL3R5cGVzXCIpO1xyXG5yZXF1aXJlKFwiLi9leGVjdXRpb25Db3VudC5jc3NcIik7XHJcbmNsYXNzIEV4ZWN1dGlvbkNvdW50IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgfVxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IGlzQnVzeSA9IHRoaXMucHJvcHMuY2VsbC5zdGF0ZSA9PT0gdHlwZXNfMS5DZWxsU3RhdGUuaW5pdCB8fCB0aGlzLnByb3BzLmNlbGwuc3RhdGUgPT09IHR5cGVzXzEuQ2VsbFN0YXRlLmV4ZWN1dGluZztcclxuICAgICAgICBpZiAodGhpcy5wcm9wcy52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpc0J1c3kgP1xyXG4gICAgICAgICAgICAgICAgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdleGVjdXRpb24tY291bnQtYnVzeS1vdXRlcicgfSxcclxuICAgICAgICAgICAgICAgICAgICBcIltcIixcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHsgY2xhc3NOYW1lOiAnZXhlY3V0aW9uLWNvdW50LWJ1c3ktc3ZnJywgdmlld0JveDogJzAgMCAxMDAgMTAwJyB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicG9seWxpbmVcIiwgeyBwb2ludHM6ICc1MCwwLCA1MCw1MCwgODUsMTUsIDUwLDUwLCAxMDAsNTAsIDUwLDUwLCA4NSw4NSwgNTAsNTAgNTAsMTAwIDUwLDUwIDE1LDg1IDUwLDUwIDAsNTAgNTAsNTAgMTUsMTUnLCBjbGFzc05hbWU6ICdleGVjdXRpb24tY291bnQtYnVzeS1wb2x5bGluZScgfSkpLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiXVwiKSkgOlxyXG4gICAgICAgICAgICAgICAgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdleGVjdXRpb24tY291bnQnIH0sIGBbJHt0aGlzLnByb3BzLmNlbGwuZGF0YS5leGVjdXRpb25fY291bnR9XWApKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5leHBvcnRzLkV4ZWN1dGlvbkNvdW50ID0gRXhlY3V0aW9uQ291bnQ7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4ZWN1dGlvbkNvdW50LmpzLm1hcCJdfQ==