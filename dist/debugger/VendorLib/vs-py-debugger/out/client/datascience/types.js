// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
}); // Main interface

exports.IDataScience = Symbol('IDataScience');
exports.IDataScienceCommandListener = Symbol('IDataScienceCommandListener'); // Talks to a jupyter ipython kernel to retrieve data for cells

exports.INotebookServer = Symbol('INotebookServer');
exports.INotebookProcess = Symbol('INotebookProcess');
exports.IJupyterExecution = Symbol('IJupyterAvailablity');
exports.INotebookImporter = Symbol('INotebookImporter');
exports.IHistoryProvider = Symbol('IHistoryProvider');
exports.IHistory = Symbol('IHistory'); // Wraps the vscode API in order to send messages back and forth from a webview

exports.IPostOffice = Symbol('IPostOffice'); // Wraps the vscode CodeLensProvider base class

exports.IDataScienceCodeLensProvider = Symbol('IDataScienceCodeLensProvider'); // Wraps the Code Watcher API

exports.ICodeWatcher = Symbol('ICodeWatcher');
var CellState;

(function (CellState) {
  CellState[CellState["init"] = 0] = "init";
  CellState[CellState["executing"] = 1] = "executing";
  CellState[CellState["finished"] = 2] = "finished";
  CellState[CellState["error"] = 3] = "error";
})(CellState = exports.CellState || (exports.CellState = {}));

exports.ICodeCssGenerator = Symbol('ICodeCssGenerator');
exports.IStatusProvider = Symbol('IStatusProvider');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVzLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSURhdGFTY2llbmNlIiwiU3ltYm9sIiwiSURhdGFTY2llbmNlQ29tbWFuZExpc3RlbmVyIiwiSU5vdGVib29rU2VydmVyIiwiSU5vdGVib29rUHJvY2VzcyIsIklKdXB5dGVyRXhlY3V0aW9uIiwiSU5vdGVib29rSW1wb3J0ZXIiLCJJSGlzdG9yeVByb3ZpZGVyIiwiSUhpc3RvcnkiLCJJUG9zdE9mZmljZSIsIklEYXRhU2NpZW5jZUNvZGVMZW5zUHJvdmlkZXIiLCJJQ29kZVdhdGNoZXIiLCJDZWxsU3RhdGUiLCJJQ29kZUNzc0dlbmVyYXRvciIsIklTdGF0dXNQcm92aWRlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDLEUsQ0FDQTs7QUFDQUQsT0FBTyxDQUFDRSxZQUFSLEdBQXVCQyxNQUFNLENBQUMsY0FBRCxDQUE3QjtBQUNBSCxPQUFPLENBQUNJLDJCQUFSLEdBQXNDRCxNQUFNLENBQUMsNkJBQUQsQ0FBNUMsQyxDQUNBOztBQUNBSCxPQUFPLENBQUNLLGVBQVIsR0FBMEJGLE1BQU0sQ0FBQyxpQkFBRCxDQUFoQztBQUNBSCxPQUFPLENBQUNNLGdCQUFSLEdBQTJCSCxNQUFNLENBQUMsa0JBQUQsQ0FBakM7QUFDQUgsT0FBTyxDQUFDTyxpQkFBUixHQUE0QkosTUFBTSxDQUFDLHFCQUFELENBQWxDO0FBQ0FILE9BQU8sQ0FBQ1EsaUJBQVIsR0FBNEJMLE1BQU0sQ0FBQyxtQkFBRCxDQUFsQztBQUNBSCxPQUFPLENBQUNTLGdCQUFSLEdBQTJCTixNQUFNLENBQUMsa0JBQUQsQ0FBakM7QUFDQUgsT0FBTyxDQUFDVSxRQUFSLEdBQW1CUCxNQUFNLENBQUMsVUFBRCxDQUF6QixDLENBQ0E7O0FBQ0FILE9BQU8sQ0FBQ1csV0FBUixHQUFzQlIsTUFBTSxDQUFDLGFBQUQsQ0FBNUIsQyxDQUNBOztBQUNBSCxPQUFPLENBQUNZLDRCQUFSLEdBQXVDVCxNQUFNLENBQUMsOEJBQUQsQ0FBN0MsQyxDQUNBOztBQUNBSCxPQUFPLENBQUNhLFlBQVIsR0FBdUJWLE1BQU0sQ0FBQyxjQUFELENBQTdCO0FBQ0EsSUFBSVcsU0FBSjs7QUFDQSxDQUFDLFVBQVVBLFNBQVYsRUFBcUI7QUFDbEJBLEVBQUFBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLE1BQUQsQ0FBVCxHQUFvQixDQUFyQixDQUFULEdBQW1DLE1BQW5DO0FBQ0FBLEVBQUFBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLFdBQUQsQ0FBVCxHQUF5QixDQUExQixDQUFULEdBQXdDLFdBQXhDO0FBQ0FBLEVBQUFBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLFVBQUQsQ0FBVCxHQUF3QixDQUF6QixDQUFULEdBQXVDLFVBQXZDO0FBQ0FBLEVBQUFBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLE9BQUQsQ0FBVCxHQUFxQixDQUF0QixDQUFULEdBQW9DLE9BQXBDO0FBQ0gsQ0FMRCxFQUtHQSxTQUFTLEdBQUdkLE9BQU8sQ0FBQ2MsU0FBUixLQUFzQmQsT0FBTyxDQUFDYyxTQUFSLEdBQW9CLEVBQTFDLENBTGY7O0FBTUFkLE9BQU8sQ0FBQ2UsaUJBQVIsR0FBNEJaLE1BQU0sQ0FBQyxtQkFBRCxDQUFsQztBQUNBSCxPQUFPLENBQUNnQixlQUFSLEdBQTBCYixNQUFNLENBQUMsaUJBQUQsQ0FBaEMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4ndXNlIHN0cmljdCc7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuLy8gTWFpbiBpbnRlcmZhY2VcclxuZXhwb3J0cy5JRGF0YVNjaWVuY2UgPSBTeW1ib2woJ0lEYXRhU2NpZW5jZScpO1xyXG5leHBvcnRzLklEYXRhU2NpZW5jZUNvbW1hbmRMaXN0ZW5lciA9IFN5bWJvbCgnSURhdGFTY2llbmNlQ29tbWFuZExpc3RlbmVyJyk7XHJcbi8vIFRhbGtzIHRvIGEganVweXRlciBpcHl0aG9uIGtlcm5lbCB0byByZXRyaWV2ZSBkYXRhIGZvciBjZWxsc1xyXG5leHBvcnRzLklOb3RlYm9va1NlcnZlciA9IFN5bWJvbCgnSU5vdGVib29rU2VydmVyJyk7XHJcbmV4cG9ydHMuSU5vdGVib29rUHJvY2VzcyA9IFN5bWJvbCgnSU5vdGVib29rUHJvY2VzcycpO1xyXG5leHBvcnRzLklKdXB5dGVyRXhlY3V0aW9uID0gU3ltYm9sKCdJSnVweXRlckF2YWlsYWJsaXR5Jyk7XHJcbmV4cG9ydHMuSU5vdGVib29rSW1wb3J0ZXIgPSBTeW1ib2woJ0lOb3RlYm9va0ltcG9ydGVyJyk7XHJcbmV4cG9ydHMuSUhpc3RvcnlQcm92aWRlciA9IFN5bWJvbCgnSUhpc3RvcnlQcm92aWRlcicpO1xyXG5leHBvcnRzLklIaXN0b3J5ID0gU3ltYm9sKCdJSGlzdG9yeScpO1xyXG4vLyBXcmFwcyB0aGUgdnNjb2RlIEFQSSBpbiBvcmRlciB0byBzZW5kIG1lc3NhZ2VzIGJhY2sgYW5kIGZvcnRoIGZyb20gYSB3ZWJ2aWV3XHJcbmV4cG9ydHMuSVBvc3RPZmZpY2UgPSBTeW1ib2woJ0lQb3N0T2ZmaWNlJyk7XHJcbi8vIFdyYXBzIHRoZSB2c2NvZGUgQ29kZUxlbnNQcm92aWRlciBiYXNlIGNsYXNzXHJcbmV4cG9ydHMuSURhdGFTY2llbmNlQ29kZUxlbnNQcm92aWRlciA9IFN5bWJvbCgnSURhdGFTY2llbmNlQ29kZUxlbnNQcm92aWRlcicpO1xyXG4vLyBXcmFwcyB0aGUgQ29kZSBXYXRjaGVyIEFQSVxyXG5leHBvcnRzLklDb2RlV2F0Y2hlciA9IFN5bWJvbCgnSUNvZGVXYXRjaGVyJyk7XHJcbnZhciBDZWxsU3RhdGU7XHJcbihmdW5jdGlvbiAoQ2VsbFN0YXRlKSB7XHJcbiAgICBDZWxsU3RhdGVbQ2VsbFN0YXRlW1wiaW5pdFwiXSA9IDBdID0gXCJpbml0XCI7XHJcbiAgICBDZWxsU3RhdGVbQ2VsbFN0YXRlW1wiZXhlY3V0aW5nXCJdID0gMV0gPSBcImV4ZWN1dGluZ1wiO1xyXG4gICAgQ2VsbFN0YXRlW0NlbGxTdGF0ZVtcImZpbmlzaGVkXCJdID0gMl0gPSBcImZpbmlzaGVkXCI7XHJcbiAgICBDZWxsU3RhdGVbQ2VsbFN0YXRlW1wiZXJyb3JcIl0gPSAzXSA9IFwiZXJyb3JcIjtcclxufSkoQ2VsbFN0YXRlID0gZXhwb3J0cy5DZWxsU3RhdGUgfHwgKGV4cG9ydHMuQ2VsbFN0YXRlID0ge30pKTtcclxuZXhwb3J0cy5JQ29kZUNzc0dlbmVyYXRvciA9IFN5bWJvbCgnSUNvZGVDc3NHZW5lcmF0b3InKTtcclxuZXhwb3J0cy5JU3RhdHVzUHJvdmlkZXIgPSBTeW1ib2woJ0lTdGF0dXNQcm92aWRlcicpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXX0=