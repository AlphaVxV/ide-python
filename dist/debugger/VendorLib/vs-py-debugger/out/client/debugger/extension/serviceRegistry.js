// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

const banner_1 = require("./banner");

const configurationProviderUtils_1 = require("./configProviders/configurationProviderUtils");

const pythonV2Provider_1 = require("./configProviders/pythonV2Provider");

const types_1 = require("./configProviders/types");

const childProcessAttachHandler_1 = require("./hooks/childProcessAttachHandler");

const childProcessAttachService_1 = require("./hooks/childProcessAttachService");

const types_2 = require("./hooks/types");

const types_3 = require("./types");

function registerTypes(serviceManager) {
  serviceManager.addSingleton(types_3.IDebugConfigurationProvider, pythonV2Provider_1.PythonV2DebugConfigurationProvider);
  serviceManager.addSingleton(types_1.IConfigurationProviderUtils, configurationProviderUtils_1.ConfigurationProviderUtils);
  serviceManager.addSingleton(types_3.IDebuggerBanner, banner_1.DebuggerBanner);
  serviceManager.addSingleton(types_2.IChildProcessAttachService, childProcessAttachService_1.ChildProcessAttachService);
  serviceManager.addSingleton(types_2.IDebugSessionEventHandlers, childProcessAttachHandler_1.ChildProcessAttachEventHandler);
}

exports.registerTypes = registerTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VSZWdpc3RyeS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJhbm5lcl8xIiwicmVxdWlyZSIsImNvbmZpZ3VyYXRpb25Qcm92aWRlclV0aWxzXzEiLCJweXRob25WMlByb3ZpZGVyXzEiLCJ0eXBlc18xIiwiY2hpbGRQcm9jZXNzQXR0YWNoSGFuZGxlcl8xIiwiY2hpbGRQcm9jZXNzQXR0YWNoU2VydmljZV8xIiwidHlwZXNfMiIsInR5cGVzXzMiLCJyZWdpc3RlclR5cGVzIiwic2VydmljZU1hbmFnZXIiLCJhZGRTaW5nbGV0b24iLCJJRGVidWdDb25maWd1cmF0aW9uUHJvdmlkZXIiLCJQeXRob25WMkRlYnVnQ29uZmlndXJhdGlvblByb3ZpZGVyIiwiSUNvbmZpZ3VyYXRpb25Qcm92aWRlclV0aWxzIiwiQ29uZmlndXJhdGlvblByb3ZpZGVyVXRpbHMiLCJJRGVidWdnZXJCYW5uZXIiLCJEZWJ1Z2dlckJhbm5lciIsIklDaGlsZFByb2Nlc3NBdHRhY2hTZXJ2aWNlIiwiQ2hpbGRQcm9jZXNzQXR0YWNoU2VydmljZSIsIklEZWJ1Z1Nlc3Npb25FdmVudEhhbmRsZXJzIiwiQ2hpbGRQcm9jZXNzQXR0YWNoRXZlbnRIYW5kbGVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0FBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyw0QkFBNEIsR0FBR0QsT0FBTyxDQUFDLDhDQUFELENBQTVDOztBQUNBLE1BQU1FLGtCQUFrQixHQUFHRixPQUFPLENBQUMsb0NBQUQsQ0FBbEM7O0FBQ0EsTUFBTUcsT0FBTyxHQUFHSCxPQUFPLENBQUMseUJBQUQsQ0FBdkI7O0FBQ0EsTUFBTUksMkJBQTJCLEdBQUdKLE9BQU8sQ0FBQyxtQ0FBRCxDQUEzQzs7QUFDQSxNQUFNSywyQkFBMkIsR0FBR0wsT0FBTyxDQUFDLG1DQUFELENBQTNDOztBQUNBLE1BQU1NLE9BQU8sR0FBR04sT0FBTyxDQUFDLGVBQUQsQ0FBdkI7O0FBQ0EsTUFBTU8sT0FBTyxHQUFHUCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxTQUFTUSxhQUFULENBQXVCQyxjQUF2QixFQUF1QztBQUNuQ0EsRUFBQUEsY0FBYyxDQUFDQyxZQUFmLENBQTRCSCxPQUFPLENBQUNJLDJCQUFwQyxFQUFpRVQsa0JBQWtCLENBQUNVLGtDQUFwRjtBQUNBSCxFQUFBQSxjQUFjLENBQUNDLFlBQWYsQ0FBNEJQLE9BQU8sQ0FBQ1UsMkJBQXBDLEVBQWlFWiw0QkFBNEIsQ0FBQ2EsMEJBQTlGO0FBQ0FMLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkgsT0FBTyxDQUFDUSxlQUFwQyxFQUFxRGhCLFFBQVEsQ0FBQ2lCLGNBQTlEO0FBQ0FQLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkosT0FBTyxDQUFDVywwQkFBcEMsRUFBZ0VaLDJCQUEyQixDQUFDYSx5QkFBNUY7QUFDQVQsRUFBQUEsY0FBYyxDQUFDQyxZQUFmLENBQTRCSixPQUFPLENBQUNhLDBCQUFwQyxFQUFnRWYsMkJBQTJCLENBQUNnQiw4QkFBNUY7QUFDSDs7QUFDRHZCLE9BQU8sQ0FBQ1csYUFBUixHQUF3QkEsYUFBeEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4ndXNlIHN0cmljdCc7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgYmFubmVyXzEgPSByZXF1aXJlKFwiLi9iYW5uZXJcIik7XHJcbmNvbnN0IGNvbmZpZ3VyYXRpb25Qcm92aWRlclV0aWxzXzEgPSByZXF1aXJlKFwiLi9jb25maWdQcm92aWRlcnMvY29uZmlndXJhdGlvblByb3ZpZGVyVXRpbHNcIik7XHJcbmNvbnN0IHB5dGhvblYyUHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2NvbmZpZ1Byb3ZpZGVycy9weXRob25WMlByb3ZpZGVyXCIpO1xyXG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vY29uZmlnUHJvdmlkZXJzL3R5cGVzXCIpO1xyXG5jb25zdCBjaGlsZFByb2Nlc3NBdHRhY2hIYW5kbGVyXzEgPSByZXF1aXJlKFwiLi9ob29rcy9jaGlsZFByb2Nlc3NBdHRhY2hIYW5kbGVyXCIpO1xyXG5jb25zdCBjaGlsZFByb2Nlc3NBdHRhY2hTZXJ2aWNlXzEgPSByZXF1aXJlKFwiLi9ob29rcy9jaGlsZFByb2Nlc3NBdHRhY2hTZXJ2aWNlXCIpO1xyXG5jb25zdCB0eXBlc18yID0gcmVxdWlyZShcIi4vaG9va3MvdHlwZXNcIik7XHJcbmNvbnN0IHR5cGVzXzMgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcclxuZnVuY3Rpb24gcmVnaXN0ZXJUeXBlcyhzZXJ2aWNlTWFuYWdlcikge1xyXG4gICAgc2VydmljZU1hbmFnZXIuYWRkU2luZ2xldG9uKHR5cGVzXzMuSURlYnVnQ29uZmlndXJhdGlvblByb3ZpZGVyLCBweXRob25WMlByb3ZpZGVyXzEuUHl0aG9uVjJEZWJ1Z0NvbmZpZ3VyYXRpb25Qcm92aWRlcik7XHJcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMS5JQ29uZmlndXJhdGlvblByb3ZpZGVyVXRpbHMsIGNvbmZpZ3VyYXRpb25Qcm92aWRlclV0aWxzXzEuQ29uZmlndXJhdGlvblByb3ZpZGVyVXRpbHMpO1xyXG4gICAgc2VydmljZU1hbmFnZXIuYWRkU2luZ2xldG9uKHR5cGVzXzMuSURlYnVnZ2VyQmFubmVyLCBiYW5uZXJfMS5EZWJ1Z2dlckJhbm5lcik7XHJcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMi5JQ2hpbGRQcm9jZXNzQXR0YWNoU2VydmljZSwgY2hpbGRQcm9jZXNzQXR0YWNoU2VydmljZV8xLkNoaWxkUHJvY2Vzc0F0dGFjaFNlcnZpY2UpO1xyXG4gICAgc2VydmljZU1hbmFnZXIuYWRkU2luZ2xldG9uKHR5cGVzXzIuSURlYnVnU2Vzc2lvbkV2ZW50SGFuZGxlcnMsIGNoaWxkUHJvY2Vzc0F0dGFjaEhhbmRsZXJfMS5DaGlsZFByb2Nlc3NBdHRhY2hFdmVudEhhbmRsZXIpO1xyXG59XHJcbmV4cG9ydHMucmVnaXN0ZXJUeXBlcyA9IHJlZ2lzdGVyVHlwZXM7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2VSZWdpc3RyeS5qcy5tYXAiXX0=